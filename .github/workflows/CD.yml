name: CD - Preprod & Prod
on:
  workflow_dispatch: {}
permissions:
  id-token: write
  contents: read

jobs:
  preprod:
    environment: preprod
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: infra/envs/azure-preprod
        env:
          ARM_USE_OIDC: "true"
        run: |
          terraform init \
            -backend-config="resource_group_name=rg-platform-shared" \
            -backend-config="storage_account_name=${{ vars.SA_TFSTATE }}" \
            -backend-config="container_name=${{ vars.TFSTATE_CONTAINER }}" \
            -backend-config="key=azure-preprod.tfstate"

      - name: Terraform Apply (preprod)
        working-directory: infra/envs/azure-preprod
        env:
          ARM_USE_OIDC: "true"
        run: |
          terraform apply -auto-approve \
            -var "location=${{ vars.LOCATION }}" \
            -var "resource_group_name=${{ vars.RG_PREPROD }}" \
            -var "app_name=vote-preprod" \
            -var "acr_login_server=${{ vars.ACR_LOGIN_SERVER }}" \
            -var "image_tag=${{ github.sha }}" \
            -var "sa_tfstate=${{ vars.SA_TFSTATE }}" \
            -var "tfstate_container=${{ vars.TFSTATE_CONTAINER }}"

      - name: Health check (preprod)
        run: |
          HOST="vote-preprod.azurewebsites.net"
          curl -f "https://${HOST}/" || (echo "Preprod health check failed" && exit 1)

  prod:
    environment: prod   # add required reviewer in GH Environment settings
    needs: preprod
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: infra/envs/azure-prod
        env:
          ARM_USE_OIDC: "true"
        run: |
          terraform init \
            -backend-config="resource_group_name=rg-platform-shared" \
            -backend-config="storage_account_name=${{ vars.SA_TFSTATE }}" \
            -backend-config="container_name=${{ vars.TFSTATE_CONTAINER }}" \
            -backend-config="key=azure-prod.tfstate"

      - name: Terraform Apply (prod)
        working-directory: infra/envs/azure-prod
        env:
          ARM_USE_OIDC: "true"
        run: |
          terraform apply -auto-approve \
            -var "location=${{ vars.LOCATION }}" \
            -var "resource_group_name=${{ vars.RG_PROD }}" \
            -var "app_name=vote-prod" \
            -var "acr_login_server=${{ vars.ACR_LOGIN_SERVER }}" \
            -var "image_tag=${{ github.sha }}" \
            -var "sa_tfstate=${{ vars.SA_TFSTATE }}" \
            -var "tfstate_container=${{ vars.TFSTATE_CONTAINER }}"

      - name: Health check (prod)
        run: |
          HOST="vote-prod.azurewebsites.net"
          curl -f "https://${HOST}/" || (echo "Prod health check failed" && exit 1)
